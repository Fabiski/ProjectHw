Projet fait en trinome avec Clément Roumilhac, Aurélien Roumégoux et Fabrice Renault

Premier rendu finit.

Nous utilisons un fichier files.txt pour inclure tous les fichier .rlib et .o que nous devons utiliser pour link car les *.rlib et les *.o ne fonctionnent pas pour nous.

Nous avons un fichier Makefile mais qui ne fonctionne pas pour l'instant cer il s'arrete après l'erreur de link.

Notre objectif était d'allumer une LED lorsque l'on presse un bouton, malheureusement probablement dû au montage, nous n'avons pas réussi à faire fonctionner le bouton.

Le port de la LED est choisit sur un int, qui lors d'un switch permet de modifier les valeurs des registres, tandis que le port d'entrée du bouton est choisit directement en dur.

Pour la compilation: se référer au MAKEFILE.

[CORRECTION GPIO] (Don't hesitate to remove this part)
You should abstract the Atmega328p hardware, with generic function, just like an HAL do (not in the main.rs for example). Make function that could be called by the user without them worrying about the hardware specification.
Consider subdividing your project into separate modules.


Pour ce deuxième rendu , notre objectif a été d'implémenter la fonctionnalité USART pour l'Atmega328p et un autre microcontrôleur de notre choix.

Cette fonctionnalité a permis la communication série bidirectionnelle entre les microcontrôleurs.

Nous avons pris les détails matériels de l'Atmega328p et du second microcontrôleur pour permettre une utilisation transparente de la fonctionnalité USART.

Nous avons implémenté les fonctions de transmission et de réception de données via USART.

Nous avons structuré le projet en modules distincts pour une meilleure organisation et compréhension du code.

Pour ce troisième rendu, nous avons implémenté le spi sur l'ATMEGA ainsi que sur le cortex-3M. Nous avons aussi rajouté les fichiers GPIO et USART pour la cortex-3M.
Ce read-me est modifié après la deadline car nous avons oublié de le remplir, mais les commits sur les fichiers ont bien été faits avant.

[CORRECTION USART] (Don't hesitate to remove this part)
For this : "Nous avons un fichier Makefile mais qui ne fonctionne pas pour l'instant cer il s'arrete après l'erreur de link.", try doing "- cargo +nightly..." instead of "cargo +nightly..."
One target is missing !

Nous avons modifié notre makefile pour y inclure la seconde target: thumbv7m-none-eabi, et en essayant votre méthode de faire "- cargo +nightly..." au lieu "cargo +nightly..."
malheureusement, cela n'a pas abouti mais nous avons su nous rapprocher d'une solution fonctionnelle.

[CORRECTION SPI] (don't hesitate to remove this part)
You could implement the controler/master mode and the peripheral/slave mode.
You could abstract more the register content, for example 0x34 is not very precise, you may want to customize your parameters more accurately (therefore you could use more freely CPOL, CPHA, BR, MSTR...).

Nous avons choisit la première solution que vous nous avez proposé, c'est à dire de mettre des cfg feature sur tous les appels de fonctions présentes dans l'une de nos deux target.
Pour les spis, nous avons implementé le mode master et le mode slave pour chacune de nos carte, tout en initialisant les différents registres du spi séparément, et pas avec une valeur héxadécimal.
